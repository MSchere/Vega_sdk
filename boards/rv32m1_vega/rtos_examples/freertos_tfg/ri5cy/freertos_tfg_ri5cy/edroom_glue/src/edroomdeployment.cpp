//##############################################################################
//###############     This file has been generated by EDROOM     ###############
//##############################################################################
 
 
#include <edroom_glue/edroomdeployment.h>
 
//*****************************************************************************
//Main Wait
 
void MainWait(CCControlPlant   &comp2,
					CCLEDTask   &comp3,
					CCHTTPServerTask   &comp4,
					CCKeyScanTask   &comp5,
					CCRS232Task   &comp6,
					CCMonitor   &comp7){
 
	Pr_Time waitTime(3, 0);
 
#ifdef _EDROOM_SYSTEM_CLOSE
	while(!comp2.EDROOMIsComponentFinished()
				||!comp3.EDROOMIsComponentFinished()
				||!comp4.EDROOMIsComponentFinished()
				||!comp5.EDROOMIsComponentFinished()
				||!comp6.EDROOMIsComponentFinished()
				||!comp7.EDROOMIsComponentFinished())
#else
	while(true)
#endif

 
		Pr_DelayIn(waitTime);
}
 
//*****************************************************************************
//SetMemory
 
void CEDROOMSystemMemory::SetMemory(){
 
	comp2Memory.SetMemory(10, comp2Messages, &comp2MessagesMarks[0]
					,13,comp2QueueNodes, &comp2QueueNodesMarks[0]);
	comp3Memory.SetMemory(10, comp3Messages, &comp3MessagesMarks[0]
					,13,comp3QueueNodes, &comp3QueueNodesMarks[0]);
	comp4Memory.SetMemory(10, comp4Messages, &comp4MessagesMarks[0]
					,13,comp4QueueNodes, &comp4QueueNodesMarks[0]);
	comp5Memory.SetMemory(10, comp5Messages, &comp5MessagesMarks[0]
					,13,comp5QueueNodes, &comp5QueueNodesMarks[0]);
	comp6Memory.SetMemory(10, comp6Messages, &comp6MessagesMarks[0]
					,13,comp6QueueNodes, &comp6QueueNodesMarks[0]);
	comp7Memory.SetMemory(10, comp7Messages, &comp7MessagesMarks[0]
					,13,comp7QueueNodes, &comp7QueueNodesMarks[0]);
}
 
//*****************************************************************************
//SetComponents
 
void CEDROOMSystemCommSAP::SetComponents(CCControlPlant   *p_comp2,
										CCLEDTask   *p_comp3,
										CCHTTPServerTask   *p_comp4,
										CCKeyScanTask   *p_comp5,
										CCRS232Task   *p_comp6,
										CCMonitor   *p_comp7){
	mp_comp2=p_comp2;
	mp_comp3=p_comp3;
	mp_comp4=p_comp4;
	mp_comp5=p_comp5;
	mp_comp6=p_comp6;
	mp_comp7=p_comp7;
}
 
 
//*****************************************************************************
//*****************************************************************************
//Signal Translation Functions
//*****************************************************************************
//*****************************************************************************
 
 
TEDROOMSignal CEDROOMSystemCommSAP::C6RS232Task_PMonitorDataStream__C7Monitor_PRS232DataStream(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CCRS232Task::SNewChar):	 signalIn=CCMonitor::SNewChar; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C7Monitor_PRS232DataStream__C6RS232Task_PMonitorDataStream(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C5KeyScanTask_PMonitorDataStream__C7Monitor_PKeybDataStream(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CCKeyScanTask::SNewChar):	 signalIn=CCMonitor::SNewChar; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C7Monitor_PKeybDataStream__C5KeyScanTask_PMonitorDataStream(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C7Monitor_PSwWatchdog__C3LEDTask_PSwWatchdog5(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CCMonitor::SIamAlive):	 signalIn=CCLEDTask::SIamAlive; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C3LEDTask_PSwWatchdog5__C7Monitor_PSwWatchdog(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C5KeyScanTask_PSwWatchdog__C3LEDTask_PSwWatchdog4(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CCKeyScanTask::SIamAlive):	 signalIn=CCLEDTask::SIamAlive; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C3LEDTask_PSwWatchdog4__C5KeyScanTask_PSwWatchdog(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C6RS232Task_PSwWatchdog__C3LEDTask_PSwWatchdog3(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CCRS232Task::SIamAlive):	 signalIn=CCLEDTask::SIamAlive; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C3LEDTask_PSwWatchdog3__C6RS232Task_PSwWatchdog(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C2ControlPlant_PKeybCommand__C5KeyScanTask_PCommand(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C5KeyScanTask_PCommand__C2ControlPlant_PKeybCommand(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CCKeyScanTask::SUpdateControlParam):	 signalIn=CCControlPlant::SUpdateControlParam; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C2ControlPlant_PRS232Command__C6RS232Task_PCommand(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C6RS232Task_PCommand__C2ControlPlant_PRS232Command(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CCRS232Task::SUpdateControlParam):	 signalIn=CCControlPlant::SUpdateControlParam; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C3LEDTask_PSwWatchdog2__C2ControlPlant_PSwWatchdog(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C2ControlPlant_PSwWatchdog__C3LEDTask_PSwWatchdog2(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CCControlPlant::SIamAlive):	 signalIn=CCLEDTask::SIamAlive; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C3LEDTask_PSwWatchdog__C4HTTPServerTask_PSwWatchdog(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
TEDROOMSignal CEDROOMSystemCommSAP::C4HTTPServerTask_PSwWatchdog__C3LEDTask_PSwWatchdog(TEDROOMSignal signalOut){
 
	TEDROOMSignal signalIn;
 
	switch(signalOut){
 
		case( CCHTTPServerTask::SIamAlive):	 signalIn=CCLEDTask::SIamAlive; break;
 
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
 
 
 
//*****************************************************************************
//RegisterInterfaces
 
void CEDROOMSystemCommSAP::RegisterInterfaces(){
 
	// Register Interface for Component 2
	m_localCommSAP.RegisterInterface(1, mp_comp2->SwWatchdog, mp_comp2);
	m_localCommSAP.RegisterInterface(2, mp_comp2->Timer, mp_comp2);
	m_localCommSAP.RegisterInterface(3, mp_comp2->RS232Command, mp_comp2);
	m_localCommSAP.RegisterInterface(4, mp_comp2->KeybCommand, mp_comp2);
 
	// Register Interface for Component 3
	m_localCommSAP.RegisterInterface(1, mp_comp3->SwWatchdog5, mp_comp3);
	m_localCommSAP.RegisterInterface(2, mp_comp3->SwWatchdog4, mp_comp3);
	m_localCommSAP.RegisterInterface(3, mp_comp3->SwWatchdog3, mp_comp3);
	m_localCommSAP.RegisterInterface(4, mp_comp3->SwWatchdog2, mp_comp3);
	m_localCommSAP.RegisterInterface(5, mp_comp3->SwWatchdog, mp_comp3);
	m_localCommSAP.RegisterInterface(6, mp_comp3->Timer, mp_comp3);
 
	// Register Interface for Component 4
	m_localCommSAP.RegisterInterface(1, mp_comp4->SwWatchdog, mp_comp4);
	m_localCommSAP.RegisterInterface(2, mp_comp4->Timer, mp_comp4);
 
	// Register Interface for Component 5
	m_localCommSAP.RegisterInterface(1, mp_comp5->SwWatchdog, mp_comp5);
	m_localCommSAP.RegisterInterface(2, mp_comp5->Timer, mp_comp5);
	m_localCommSAP.RegisterInterface(3, mp_comp5->Command, mp_comp5);
	m_localCommSAP.RegisterInterface(4, mp_comp5->MonitorDataStream, mp_comp5);
 
	// Register Interface for Component 6
	m_localCommSAP.RegisterInterface(1, mp_comp6->SwWatchdog, mp_comp6);
	m_localCommSAP.RegisterInterface(2, mp_comp6->Timer, mp_comp6);
	m_localCommSAP.RegisterInterface(3, mp_comp6->Command, mp_comp6);
	m_localCommSAP.RegisterInterface(4, mp_comp6->MonitorDataStream, mp_comp6);
 
	// Register Interface for Component 7
	m_localCommSAP.RegisterInterface(1, mp_comp7->Timer, mp_comp7);
	m_localCommSAP.RegisterInterface(2, mp_comp7->SwWatchdog, mp_comp7);
	m_localCommSAP.RegisterInterface(3, mp_comp7->RS232DataStream, mp_comp7);
	m_localCommSAP.RegisterInterface(4, mp_comp7->KeybDataStream, mp_comp7);
 
}
 
 
//*****************************************************************************
////SetLocalConnections
 
void CEDROOMSystemCommSAP::SetLocalConnections(){
 
	m_localCommSAP.Connect(mp_comp6->MonitorDataStream, mp_comp7->RS232DataStream, connections[0], 
					C6RS232Task_PMonitorDataStream__C7Monitor_PRS232DataStream, 
					C7Monitor_PRS232DataStream__C6RS232Task_PMonitorDataStream);
 
	m_localCommSAP.Connect(mp_comp5->MonitorDataStream, mp_comp7->KeybDataStream, connections[1], 
					C5KeyScanTask_PMonitorDataStream__C7Monitor_PKeybDataStream, 
					C7Monitor_PKeybDataStream__C5KeyScanTask_PMonitorDataStream);
 
	m_localCommSAP.Connect(mp_comp7->SwWatchdog, mp_comp3->SwWatchdog5, connections[2], 
					C7Monitor_PSwWatchdog__C3LEDTask_PSwWatchdog5, 
					C3LEDTask_PSwWatchdog5__C7Monitor_PSwWatchdog);
 
	m_localCommSAP.Connect(mp_comp5->SwWatchdog, mp_comp3->SwWatchdog4, connections[3], 
					C5KeyScanTask_PSwWatchdog__C3LEDTask_PSwWatchdog4, 
					C3LEDTask_PSwWatchdog4__C5KeyScanTask_PSwWatchdog);
 
	m_localCommSAP.Connect(mp_comp6->SwWatchdog, mp_comp3->SwWatchdog3, connections[4], 
					C6RS232Task_PSwWatchdog__C3LEDTask_PSwWatchdog3, 
					C3LEDTask_PSwWatchdog3__C6RS232Task_PSwWatchdog);
 
	m_localCommSAP.Connect(mp_comp2->KeybCommand, mp_comp5->Command, connections[5], 
					C2ControlPlant_PKeybCommand__C5KeyScanTask_PCommand, 
					C5KeyScanTask_PCommand__C2ControlPlant_PKeybCommand);
 
	m_localCommSAP.Connect(mp_comp2->RS232Command, mp_comp6->Command, connections[6], 
					C2ControlPlant_PRS232Command__C6RS232Task_PCommand, 
					C6RS232Task_PCommand__C2ControlPlant_PRS232Command);
 
	m_localCommSAP.Connect(mp_comp3->SwWatchdog2, mp_comp2->SwWatchdog, connections[7], 
					C3LEDTask_PSwWatchdog2__C2ControlPlant_PSwWatchdog, 
					C2ControlPlant_PSwWatchdog__C3LEDTask_PSwWatchdog2);
 
	m_localCommSAP.Connect(mp_comp3->SwWatchdog, mp_comp4->SwWatchdog, connections[8], 
					C3LEDTask_PSwWatchdog__C4HTTPServerTask_PSwWatchdog, 
					C4HTTPServerTask_PSwWatchdog__C3LEDTask_PSwWatchdog);
 
}
 
 
//*****************************************************************************
////SetRemoteConnections
 
void CEDROOMSystemCommSAP::SetRemoteConnections(){
 
}
 
//*****************************************************************************
////SetConnections
 
void CEDROOMSystemCommSAP::SetConnections(){
 
	SetLocalConnections();
	SetRemoteConnections();
 
}
 
//*****************************************************************************
////CEDROOMSystemDeployment Constructor
 
CEDROOMSystemDeployment::CEDROOMSystemDeployment(){
 
#ifdef CONFIG_EDROOMSL_ADD_TRACE
#endif
	systemMemory.SetMemory();
 
}
 
//*****************************************************************************
////Config
 
void CEDROOMSystemDeployment::Config(CCControlPlant   *p_comp2,
											CCLEDTask   *p_comp3,
											CCHTTPServerTask   *p_comp4,
											CCKeyScanTask   *p_comp5,
											CCRS232Task   *p_comp6,
											CCMonitor   *p_comp7){
 
	mp_comp2=p_comp2;
	mp_comp3=p_comp3;
	mp_comp4=p_comp4;
	mp_comp5=p_comp5;
	mp_comp6=p_comp6;
	mp_comp7=p_comp7;
 
	systemCommSAP.SetComponents(	p_comp2,
									p_comp3,
									p_comp4,
									p_comp5,
									p_comp6,
									p_comp7);
 
	systemCommSAP.RegisterInterfaces();
	systemCommSAP.SetConnections();
 
}
 
//*****************************************************************************
////StartComponents
 
void CEDROOMSystemDeployment::StartComponents(){
	mp_comp2->EDROOMStart();
	mp_comp3->EDROOMStart();
	mp_comp4->EDROOMStart();
	mp_comp5->EDROOMStart();
	mp_comp6->EDROOMStart();
	mp_comp7->EDROOMStart();
 
}
 
//*****************************************************************************
////Start
 
void CEDROOMSystemDeployment::Start(){
 
#ifdef CONFIG_EDROOMBP_DEPLOYMENT_NEED_TASK
 
	Pr_Task MainTask(CEDROOMSystemDeployment::main_task,EDROOMprioMINIMUM,1024*16);
 
	kernel.Start();
 
#else
 
StartComponents();
 
	kernel.Start();
 
	MainWait(*mp_comp2,
				*mp_comp3,
				*mp_comp4,
				*mp_comp5,
				*mp_comp6,
				*mp_comp7);
 
 
#endif
 
}
 
#ifdef CONFIG_EDROOMBP_DEPLOYMENT_NEED_TASK
 
	extern CEDROOMSystemDeployment systemDeployment;
 
 
//*****************************************************************************
////main_task
 
 
Pr_TaskRV_t CEDROOMSystemDeployment::main_task(Pr_TaskP_t){
 
	systemDeployment.StartComponents();
	MainWait(*systemDeployment.mp_comp2,
				*systemDeployment.mp_comp3,
				*systemDeployment.mp_comp4,
				*systemDeployment.mp_comp5,
				*systemDeployment.mp_comp6,
				*systemDeployment.mp_comp7);
 
}
#endif
